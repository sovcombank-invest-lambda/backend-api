"""empty message

Revision ID: fae8d0701d41
Revises: 
Create Date: 2022-11-20 03:18:35.955155

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fae8d0701d41'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__currency')),
    sa.UniqueConstraint('id', name=op.f('uq__currency__id')),
    sa.UniqueConstraint('name', name=op.f('uq__currency__name'))
    )
    op.create_table('exchange_rates',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('code', sa.INTEGER(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('amount', sa.INTEGER(), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__exchange_rates')),
    sa.UniqueConstraint('id', name=op.f('uq__exchange_rates__id'))
    )
    op.create_table('news',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__news')),
    sa.UniqueConstraint('id', name=op.f('uq__news__id'))
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('role', postgresql.ENUM('DEMO', 'UNVERIFIED', 'REGULAR', 'ADMIN', name='roles'), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('gender', postgresql.ENUM('MALE', 'FEMALE', 'UNSPECIFIED', name='gender'), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('avatar_id', sa.String(), nullable=True),
    sa.Column('birth_date', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__users')),
    sa.UniqueConstraint('id', name=op.f('uq__users__id')),
    sa.UniqueConstraint('phone', name=op.f('uq__users__phone'))
    )
    op.create_table('currency_account',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('currency_id', postgresql.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], name=op.f('fk__currency_account__currency_id__currency'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk__currency_account__user_id__users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__currency_account')),
    sa.UniqueConstraint('id', name=op.f('uq__currency_account__id'))
    )
    op.create_table('transactions',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('currency_account_id', postgresql.UUID(), nullable=False),
    sa.Column('change_value', sa.FLOAT(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['currency_account_id'], ['currency_account.id'], name=op.f('fk__transactions__currency_account_id__currency_account'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__transactions')),
    sa.UniqueConstraint('id', name=op.f('uq__transactions__id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('currency_account')
    op.drop_table('users')
    op.drop_table('news')
    op.drop_table('exchange_rates')
    op.drop_table('currency')
    # ### end Alembic commands ###
